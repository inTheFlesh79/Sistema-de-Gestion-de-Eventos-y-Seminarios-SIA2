
package Vista;

import Exceptions.BadIdRecintoException;
import Exceptions.BadRangeEdadException;
import Modelo.Asistente;
import Modelo.Evento;
import javax.swing.table.DefaultTableModel;
import Modelo.Menu;
import javax.swing.JOptionPane;


public class GestionEventos extends javax.swing.JPanel {

    /**
     * Creates new form GestionEventos
     */
    private Menu menu;
    private Evento eventoTMP = new Evento();
    private VP currentVP;
    
    public GestionEventos() {
        
        initComponents();
        crearRecintoPnlCE.setVisible(false);
        crearRecintoPnlME.setVisible(false);
        crearEventoPnl.setVisible(false);
        listarEventos.setVisible(false);
        listarAsistentesEventoPnl.setVisible(false);
        modificarEventoPnl.setVisible(false);
        eliminarEvento.setVisible(false);
        listarAsistentesEventoPnl.setVisible(false);
        recaudacionEventoPnl.setVisible(false);
        modificarAsistentePnl.setVisible(false);
    }
    
    public void setCurrentVP(VP vp){
        this.currentVP = vp;    
    }

    
    public void setMenu(Menu menu) {
        this.menu = menu;
        System.out.println(menu.getMenu());
    }
    
    public DefaultTableModel getMostrarEventosTblLEModel(){
        return (DefaultTableModel) mostrarEventosTblLE.getModel();
    }
    
    public DefaultTableModel getMostrarAsistentesTblLAEModel(){
        return (DefaultTableModel) mostrarAsistentesTblLAE.getModel();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPnl = new javax.swing.JPanel();
        headerLblPnl = new javax.swing.JLabel();
        crearRecintoPnlCE = new javax.swing.JPanel();
        headerLblCR = new javax.swing.JLabel();
        idRecintoLblCR = new javax.swing.JLabel();
        idRecintoFieldCR = new javax.swing.JTextField();
        nombreRecintoLblCR = new javax.swing.JLabel();
        nombreRecintoFieldCR = new javax.swing.JTextField();
        ubicacionLblCR = new javax.swing.JLabel();
        ubicacionFieldCR = new javax.swing.JTextField();
        cuposLblCR = new javax.swing.JLabel();
        cuposFieldCR = new javax.swing.JTextField();
        aceptarBtnCR = new javax.swing.JButton();
        crearEventoPnl = new javax.swing.JPanel();
        headerLblCE = new javax.swing.JLabel();
        idEventoLblCE = new javax.swing.JLabel();
        idEventoFieldCE = new javax.swing.JTextField();
        nombreLblCE = new javax.swing.JLabel();
        nombreFieldCE = new javax.swing.JTextField();
        fechaLblCE = new javax.swing.JLabel();
        fechaFieldCE = new javax.swing.JTextField();
        descripLblCE = new javax.swing.JLabel();
        descripFieldCE = new javax.swing.JTextField();
        grupoLblCE = new javax.swing.JLabel();
        grupoScrollPnlCE = new javax.swing.JScrollPane();
        listaGrupoObjetivo = new javax.swing.JList<>();
        valorEntradaLblCE = new javax.swing.JLabel();
        valorEntradaFieldCE = new javax.swing.JTextField();
        idRecintoLblCE = new javax.swing.JLabel();
        idRecintoFieldCE = new javax.swing.JTextField();
        aceptarBtnCEPnl = new javax.swing.JButton();
        backBtnCEPnl = new javax.swing.JButton();
        listarEventos = new javax.swing.JPanel();
        HeaderLblLE = new javax.swing.JLabel();
        backBtnLEPnl = new javax.swing.JButton();
        mostrarEventosScrPnlLE = new javax.swing.JScrollPane();
        mostrarEventosTblLE = new javax.swing.JTable();
        crearRecintoPnlME = new javax.swing.JPanel();
        headerLblCR1 = new javax.swing.JLabel();
        idRecintoLblCR1 = new javax.swing.JLabel();
        idRecintoFieldCR1 = new javax.swing.JTextField();
        nombreRecintoLblCR1 = new javax.swing.JLabel();
        nombreRecintoFieldCR1 = new javax.swing.JTextField();
        ubicacionLblCR1 = new javax.swing.JLabel();
        ubicacionFieldCR1 = new javax.swing.JTextField();
        cuposLblCR1 = new javax.swing.JLabel();
        cuposFieldCR1 = new javax.swing.JTextField();
        aceptarBtnCR1 = new javax.swing.JButton();
        modificarEventoPnl = new javax.swing.JPanel();
        headerLblME = new javax.swing.JLabel();
        idEventoLblME = new javax.swing.JLabel();
        idEventoFieldME = new javax.swing.JTextField();
        nombreLblME = new javax.swing.JLabel();
        nombreFieldME = new javax.swing.JTextField();
        fechaLblME = new javax.swing.JLabel();
        fechaFieldME = new javax.swing.JTextField();
        descripLblME = new javax.swing.JLabel();
        descripFieldME = new javax.swing.JTextField();
        grupoLblME = new javax.swing.JLabel();
        grupoMEScrollPnl = new javax.swing.JScrollPane();
        listaGrupoObjME = new javax.swing.JList<>();
        valorEntradaLblME = new javax.swing.JLabel();
        valorEntradaFieldME = new javax.swing.JTextField();
        idRecintoLblME = new javax.swing.JLabel();
        idRecintoFieldME = new javax.swing.JTextField();
        aceptarBtnMEPnl = new javax.swing.JButton();
        backBtnMEPnl = new javax.swing.JButton();
        eliminarEvento = new javax.swing.JPanel();
        HeaderEELbl = new javax.swing.JLabel();
        idEventoEELbl = new javax.swing.JLabel();
        idEventoFieldEE = new javax.swing.JTextField();
        eliminarBtnEEPnl = new javax.swing.JButton();
        backBtnEEPnl = new javax.swing.JButton();
        modificarAsistentePnl = new javax.swing.JPanel();
        headerMALbl = new javax.swing.JLabel();
        idEventoMALbl = new javax.swing.JLabel();
        idEventoMAField = new javax.swing.JTextField();
        nombreMALbl = new javax.swing.JLabel();
        idAsistenteMAField = new javax.swing.JTextField();
        fechaMALbl = new javax.swing.JLabel();
        nombreMAField = new javax.swing.JTextField();
        descripMALbl = new javax.swing.JLabel();
        emailMAField = new javax.swing.JTextField();
        valorEntradaMALbl = new javax.swing.JLabel();
        edadMAField = new javax.swing.JTextField();
        validarBtnMAPnl = new javax.swing.JButton();
        backBtnMAPnl = new javax.swing.JButton();
        aceptarMABtnPnl1 = new javax.swing.JButton();
        jLabelMA = new javax.swing.JLabel();
        listarAsistentesEventoPnl = new javax.swing.JPanel();
        headerLblLAE = new javax.swing.JLabel();
        idEventoLblLAE = new javax.swing.JLabel();
        idEventoFieldLAE = new javax.swing.JTextField();
        idAsistenteLblLAE = new javax.swing.JLabel();
        idAsistenteFieldLAE = new javax.swing.JTextField();
        validarIdEventoLAEPnl = new javax.swing.JButton();
        validarIdAsistenteLAEPnl = new javax.swing.JButton();
        backBtnLAEPnl = new javax.swing.JButton();
        mostrarAsistentesScrPnlLAE = new javax.swing.JScrollPane();
        mostrarAsistentesTblLAE = new javax.swing.JTable();
        recaudacionEventoPnl = new javax.swing.JPanel();
        headerRELbl = new javax.swing.JLabel();
        idEventoRELbl = new javax.swing.JLabel();
        idEventoREField = new javax.swing.JTextField();
        aceptarBtnREPnl = new javax.swing.JButton();
        backBtnREPnl = new javax.swing.JButton();
        jLabelME = new javax.swing.JLabel();
        resultadoRELbl = new javax.swing.JLabel();
        crearEventoBtn = new javax.swing.JButton();
        listarEventosBtn = new javax.swing.JButton();
        modEventoBtn = new javax.swing.JButton();
        eliminarEventoBtn = new javax.swing.JButton();
        listarAsistentesBtn = new javax.swing.JButton();
        modAsistenteBtn = new javax.swing.JButton();
        recaudEventoBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPnl.setBackground(new java.awt.Color(255, 228, 209));
        backgroundPnl.setPreferredSize(new java.awt.Dimension(768, 578));
        backgroundPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblPnl.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        headerLblPnl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblPnl.setText("Seleccione una opcion para Gestionar Eventos");
        headerLblPnl.setPreferredSize(new java.awt.Dimension(640, 110));
        backgroundPnl.add(headerLblPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));

        crearRecintoPnlCE.setBackground(new java.awt.Color(255, 255, 255));
        crearRecintoPnlCE.setPreferredSize(new java.awt.Dimension(710, 440));
        crearRecintoPnlCE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblCR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerLblCR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblCR.setText("Por favor, ingrese los datos del Recinto a crear");
        headerLblCR.setPreferredSize(new java.awt.Dimension(480, 65));
        crearRecintoPnlCE.add(headerLblCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, -1, -1));

        idRecintoLblCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoLblCR.setText("ID del Recinto");
        crearRecintoPnlCE.add(idRecintoLblCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idRecintoFieldCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoFieldCR.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlCE.add(idRecintoFieldCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        nombreRecintoLblCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreRecintoLblCR.setText("Nombre del Recinto");
        crearRecintoPnlCE.add(nombreRecintoLblCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        nombreRecintoFieldCR.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlCE.add(nombreRecintoFieldCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        ubicacionLblCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ubicacionLblCR.setText("Ubicacion del Recinto");
        crearRecintoPnlCE.add(ubicacionLblCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        ubicacionFieldCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ubicacionFieldCR.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlCE.add(ubicacionFieldCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        cuposLblCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cuposLblCR.setText("Capacidad Maxima del Recinto");
        crearRecintoPnlCE.add(cuposLblCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        cuposFieldCR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cuposFieldCR.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlCE.add(cuposFieldCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        aceptarBtnCR.setText("Aceptar");
        aceptarBtnCR.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarBtnCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnCRActionPerformed(evt);
            }
        });
        crearRecintoPnlCE.add(aceptarBtnCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        backgroundPnl.add(crearRecintoPnlCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        crearEventoPnl.setBackground(new java.awt.Color(255, 255, 255));
        crearEventoPnl.setPreferredSize(new java.awt.Dimension(710, 440));
        crearEventoPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblCE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerLblCE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblCE.setText("Por favor, ingrese los datos asociados al Evento");
        headerLblCE.setPreferredSize(new java.awt.Dimension(400, 65));
        crearEventoPnl.add(headerLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        idEventoLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoLblCE.setText("ID del Evento");
        crearEventoPnl.add(idEventoLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(idEventoFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        nombreLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreLblCE.setText("Nombre del Evento");
        crearEventoPnl.add(nombreLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        nombreFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        nombreFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(nombreFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        fechaLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fechaLblCE.setText("Fecha del Evento");
        crearEventoPnl.add(fechaLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        fechaFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fechaFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        fechaFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(fechaFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        descripLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descripLblCE.setText("Descripcion del Evento");
        crearEventoPnl.add(descripLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        descripFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descripFieldCE.setMinimumSize(new java.awt.Dimension(91, 22));
        descripFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        descripFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(descripFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        grupoLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        grupoLblCE.setText("Seleccione un Grupo Objetivo para el Evento");
        crearEventoPnl.add(grupoLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, -1));

        listaGrupoObjetivo.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Infantes", "Adolescentes", "Adultos Jovenes", "Adultos", "Tercera Edad" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        grupoScrollPnlCE.setViewportView(listaGrupoObjetivo);

        crearEventoPnl.add(grupoScrollPnlCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 110, 100));

        valorEntradaLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valorEntradaLblCE.setText("Valor de Entrada del Evento (CLP)");
        crearEventoPnl.add(valorEntradaLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        valorEntradaFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valorEntradaFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        valorEntradaFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorEntradaFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(valorEntradaFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        idRecintoLblCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoLblCE.setText("ID del Recinto donde se alojara el Evento");
        crearEventoPnl.add(idRecintoLblCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, -1, -1));

        idRecintoFieldCE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoFieldCE.setPreferredSize(new java.awt.Dimension(91, 22));
        idRecintoFieldCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idRecintoFieldCEActionPerformed(evt);
            }
        });
        crearEventoPnl.add(idRecintoFieldCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        aceptarBtnCEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aceptarBtnCEPnl.setText("Aceptar");
        aceptarBtnCEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarBtnCEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnCEPnlActionPerformed(evt);
            }
        });
        crearEventoPnl.add(aceptarBtnCEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, -1, -1));

        backBtnCEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnCEPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnCEPnl.setText("Atras");
        backBtnCEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnCEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnCEPnlActionPerformed(evt);
            }
        });
        crearEventoPnl.add(backBtnCEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        backgroundPnl.add(crearEventoPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        listarEventos.setBackground(new java.awt.Color(255, 255, 255));
        listarEventos.setMinimumSize(new java.awt.Dimension(660, 435));
        listarEventos.setPreferredSize(new java.awt.Dimension(710, 440));
        listarEventos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeaderLblLE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        HeaderLblLE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderLblLE.setText("Listado de Eventos");
        HeaderLblLE.setPreferredSize(new java.awt.Dimension(400, 65));
        listarEventos.add(HeaderLblLE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        backBtnLEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnLEPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnLEPnl.setText("Atras");
        backBtnLEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnLEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnLEPnlActionPerformed(evt);
            }
        });
        listarEventos.add(backBtnLEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        mostrarEventosTblLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Evento", "Nombre", "Fecha", "Recinto", "Grupo Objetivo", "Descripcion", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mostrarEventosScrPnlLE.setViewportView(mostrarEventosTblLE);
        if (mostrarEventosTblLE.getColumnModel().getColumnCount() > 0) {
            mostrarEventosTblLE.getColumnModel().getColumn(0).setPreferredWidth(80);
            mostrarEventosTblLE.getColumnModel().getColumn(1).setPreferredWidth(170);
            mostrarEventosTblLE.getColumnModel().getColumn(2).setPreferredWidth(70);
            mostrarEventosTblLE.getColumnModel().getColumn(3).setPreferredWidth(100);
            mostrarEventosTblLE.getColumnModel().getColumn(4).setPreferredWidth(100);
            mostrarEventosTblLE.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        listarEventos.add(mostrarEventosScrPnlLE, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 690, 320));

        backgroundPnl.add(listarEventos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        crearRecintoPnlME.setBackground(new java.awt.Color(255, 255, 255));
        crearRecintoPnlME.setPreferredSize(new java.awt.Dimension(710, 440));
        crearRecintoPnlME.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblCR1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerLblCR1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblCR1.setText("Por favor, ingrese los datos del Recinto a crear");
        headerLblCR1.setPreferredSize(new java.awt.Dimension(480, 65));
        crearRecintoPnlME.add(headerLblCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, -1, -1));

        idRecintoLblCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoLblCR1.setText("ID del Recinto");
        crearRecintoPnlME.add(idRecintoLblCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idRecintoFieldCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoFieldCR1.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlME.add(idRecintoFieldCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        nombreRecintoLblCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreRecintoLblCR1.setText("Nombre del Recinto");
        crearRecintoPnlME.add(nombreRecintoLblCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        nombreRecintoFieldCR1.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlME.add(nombreRecintoFieldCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        ubicacionLblCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ubicacionLblCR1.setText("Ubicacion del Recinto");
        crearRecintoPnlME.add(ubicacionLblCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        ubicacionFieldCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ubicacionFieldCR1.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlME.add(ubicacionFieldCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        cuposLblCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cuposLblCR1.setText("Capacidad Maxima del Recinto");
        crearRecintoPnlME.add(cuposLblCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        cuposFieldCR1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cuposFieldCR1.setPreferredSize(new java.awt.Dimension(91, 22));
        crearRecintoPnlME.add(cuposFieldCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        aceptarBtnCR1.setText("Aceptar");
        aceptarBtnCR1.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarBtnCR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnCR1ActionPerformed(evt);
            }
        });
        crearRecintoPnlME.add(aceptarBtnCR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        backgroundPnl.add(crearRecintoPnlME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        modificarEventoPnl.setBackground(new java.awt.Color(255, 255, 255));
        modificarEventoPnl.setPreferredSize(new java.awt.Dimension(710, 440));
        modificarEventoPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblME.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerLblME.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblME.setText("Por favor, Ingrese los datos para modificar el Evento");
        headerLblME.setMaximumSize(new java.awt.Dimension(377, 22));
        headerLblME.setMinimumSize(new java.awt.Dimension(377, 22));
        headerLblME.setPreferredSize(new java.awt.Dimension(400, 65));
        modificarEventoPnl.add(headerLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 450, -1));

        idEventoLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoLblME.setText("ID del Evento");
        modificarEventoPnl.add(idEventoLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(idEventoFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        nombreLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreLblME.setText("Nombre del Evento");
        modificarEventoPnl.add(nombreLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        nombreFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        nombreFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(nombreFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        fechaLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fechaLblME.setText("Fecha del Evento");
        modificarEventoPnl.add(fechaLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        fechaFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fechaFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        fechaFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(fechaFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        descripLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descripLblME.setText("Descripcion del Evento");
        modificarEventoPnl.add(descripLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        descripFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descripFieldME.setMinimumSize(new java.awt.Dimension(91, 22));
        descripFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        descripFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(descripFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        grupoLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        grupoLblME.setText("Seleccione un Grupo Objetivo para el Evento");
        modificarEventoPnl.add(grupoLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, -1));

        listaGrupoObjME.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Infantes", "Adolescentes", "Adultos Jovenes", "Adultos", "Tercera Edad" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        grupoMEScrollPnl.setViewportView(listaGrupoObjME);

        modificarEventoPnl.add(grupoMEScrollPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 110, 100));

        valorEntradaLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valorEntradaLblME.setText("Valor de Entrada del Evento (CLP)");
        modificarEventoPnl.add(valorEntradaLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        valorEntradaFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valorEntradaFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        valorEntradaFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorEntradaFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(valorEntradaFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        idRecintoLblME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoLblME.setText("ID del Recinto donde se alojara el Evento");
        modificarEventoPnl.add(idRecintoLblME, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, -1, -1));

        idRecintoFieldME.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idRecintoFieldME.setPreferredSize(new java.awt.Dimension(91, 22));
        idRecintoFieldME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idRecintoFieldMEActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(idRecintoFieldME, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        aceptarBtnMEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aceptarBtnMEPnl.setText("Aceptar");
        aceptarBtnMEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarBtnMEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnMEPnlActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(aceptarBtnMEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, -1, -1));

        backBtnMEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnMEPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnMEPnl.setText("Atras");
        backBtnMEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnMEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnMEPnlActionPerformed(evt);
            }
        });
        modificarEventoPnl.add(backBtnMEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        backgroundPnl.add(modificarEventoPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        eliminarEvento.setBackground(new java.awt.Color(255, 255, 255));
        eliminarEvento.setPreferredSize(new java.awt.Dimension(710, 440));
        eliminarEvento.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeaderEELbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        HeaderEELbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderEELbl.setText("Listado de Eventos");
        HeaderEELbl.setPreferredSize(new java.awt.Dimension(400, 65));
        eliminarEvento.add(HeaderEELbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        idEventoEELbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoEELbl.setText("Ingrese el ID del evento a eliminar:");
        eliminarEvento.add(idEventoEELbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoFieldEE.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoFieldEE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoFieldEEActionPerformed(evt);
            }
        });
        eliminarEvento.add(idEventoFieldEE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        eliminarBtnEEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        eliminarBtnEEPnl.setText("Eliminar");
        eliminarBtnEEPnl.setPreferredSize(new java.awt.Dimension(75, 43));
        eliminarBtnEEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnEEPnlActionPerformed(evt);
            }
        });
        eliminarEvento.add(eliminarBtnEEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        backBtnEEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnEEPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnEEPnl.setText("Atras");
        backBtnEEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnEEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnEEPnlActionPerformed(evt);
            }
        });
        eliminarEvento.add(backBtnEEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        backgroundPnl.add(eliminarEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        modificarAsistentePnl.setBackground(new java.awt.Color(255, 255, 255));
        modificarAsistentePnl.setPreferredSize(new java.awt.Dimension(710, 440));
        modificarAsistentePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerMALbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerMALbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerMALbl.setText("Por favor, ingrese los datos asociados al Asistente");
        headerMALbl.setPreferredSize(new java.awt.Dimension(400, 65));
        modificarAsistentePnl.add(headerMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, -1, -1));

        idEventoMALbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoMALbl.setText("ID del Evento");
        modificarAsistentePnl.add(idEventoMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoMAField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoMAField.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoMAField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoMAFieldActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(idEventoMAField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        nombreMALbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreMALbl.setText("ID Asistente");
        modificarAsistentePnl.add(nombreMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, 20));

        idAsistenteMAField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idAsistenteMAField.setPreferredSize(new java.awt.Dimension(91, 22));
        idAsistenteMAField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idAsistenteMAFieldActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(idAsistenteMAField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        fechaMALbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fechaMALbl.setText("Nombre");
        modificarAsistentePnl.add(fechaMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        nombreMAField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nombreMAField.setPreferredSize(new java.awt.Dimension(91, 22));
        nombreMAField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreMAFieldActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(nombreMAField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        descripMALbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        descripMALbl.setText("Email");
        modificarAsistentePnl.add(descripMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        emailMAField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailMAField.setMinimumSize(new java.awt.Dimension(91, 22));
        emailMAField.setPreferredSize(new java.awt.Dimension(91, 22));
        emailMAField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailMAFieldActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(emailMAField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        valorEntradaMALbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valorEntradaMALbl.setText("Edad");
        modificarAsistentePnl.add(valorEntradaMALbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        edadMAField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        edadMAField.setPreferredSize(new java.awt.Dimension(91, 22));
        edadMAField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edadMAFieldActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(edadMAField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        validarBtnMAPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validarBtnMAPnl.setText("Validar");
        validarBtnMAPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        validarBtnMAPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarBtnMAPnlActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(validarBtnMAPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, -1));

        backBtnMAPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnMAPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnMAPnl.setText("Atras");
        backBtnMAPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnMAPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnMAPnlActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(backBtnMAPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        aceptarMABtnPnl1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aceptarMABtnPnl1.setText("Aceptar");
        aceptarMABtnPnl1.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarMABtnPnl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarMABtnPnl1ActionPerformed(evt);
            }
        });
        modificarAsistentePnl.add(aceptarMABtnPnl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, -1, -1));

        jLabelMA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMA.setText("Ingrese los nuevos datos del Asistente");
        modificarAsistentePnl.add(jLabelMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 400, 40));

        backgroundPnl.add(modificarAsistentePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        listarAsistentesEventoPnl.setBackground(new java.awt.Color(255, 255, 255));
        listarAsistentesEventoPnl.setMinimumSize(new java.awt.Dimension(656, 431));
        listarAsistentesEventoPnl.setPreferredSize(new java.awt.Dimension(710, 440));
        listarAsistentesEventoPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerLblLAE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerLblLAE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLblLAE.setText("Por favor, Ingrese los datos solicitados");
        headerLblLAE.setMaximumSize(new java.awt.Dimension(377, 22));
        headerLblLAE.setMinimumSize(new java.awt.Dimension(377, 22));
        headerLblLAE.setPreferredSize(new java.awt.Dimension(400, 65));
        listarAsistentesEventoPnl.add(headerLblLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 450, -1));

        idEventoLblLAE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoLblLAE.setText("ID del Evento");
        listarAsistentesEventoPnl.add(idEventoLblLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoFieldLAE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoFieldLAE.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoFieldLAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoFieldLAEActionPerformed(evt);
            }
        });
        listarAsistentesEventoPnl.add(idEventoFieldLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        idAsistenteLblLAE.setText("ID del Asistente");
        listarAsistentesEventoPnl.add(idAsistenteLblLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        idAsistenteFieldLAE.setPreferredSize(new java.awt.Dimension(91, 22));
        listarAsistentesEventoPnl.add(idAsistenteFieldLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        validarIdEventoLAEPnl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        validarIdEventoLAEPnl.setText("Buscar");
        validarIdEventoLAEPnl.setPreferredSize(new java.awt.Dimension(75, 43));
        validarIdEventoLAEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarIdEventoLAEPnlActionPerformed(evt);
            }
        });
        listarAsistentesEventoPnl.add(validarIdEventoLAEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        validarIdAsistenteLAEPnl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        validarIdAsistenteLAEPnl.setText("Buscar");
        validarIdAsistenteLAEPnl.setPreferredSize(new java.awt.Dimension(75, 43));
        validarIdAsistenteLAEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarIdAsistenteLAEPnlActionPerformed(evt);
            }
        });
        listarAsistentesEventoPnl.add(validarIdAsistenteLAEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        backBtnLAEPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnLAEPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnLAEPnl.setText("Atras");
        backBtnLAEPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnLAEPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnLAEPnlActionPerformed(evt);
            }
        });
        listarAsistentesEventoPnl.add(backBtnLAEPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, -1));

        mostrarAsistentesTblLAE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Asistente", "Nombre", "Email", "Edad"
            }
        ));
        mostrarAsistentesScrPnlLAE.setViewportView(mostrarAsistentesTblLAE);
        if (mostrarAsistentesTblLAE.getColumnModel().getColumnCount() > 0) {
            mostrarAsistentesTblLAE.getColumnModel().getColumn(1).setPreferredWidth(150);
            mostrarAsistentesTblLAE.getColumnModel().getColumn(2).setPreferredWidth(150);
            mostrarAsistentesTblLAE.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        listarAsistentesEventoPnl.add(mostrarAsistentesScrPnlLAE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 650, 250));

        backgroundPnl.add(listarAsistentesEventoPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        recaudacionEventoPnl.setBackground(new java.awt.Color(255, 255, 255));
        recaudacionEventoPnl.setMinimumSize(new java.awt.Dimension(656, 431));
        recaudacionEventoPnl.setPreferredSize(new java.awt.Dimension(710, 440));
        recaudacionEventoPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerRELbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        headerRELbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerRELbl.setText("Por favor, Ingrese los datos solicitados para ver la Recaudación");
        headerRELbl.setMaximumSize(new java.awt.Dimension(377, 22));
        headerRELbl.setMinimumSize(new java.awt.Dimension(377, 22));
        headerRELbl.setPreferredSize(new java.awt.Dimension(400, 65));
        recaudacionEventoPnl.add(headerRELbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 530, -1));

        idEventoRELbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoRELbl.setText("ID del Evento");
        recaudacionEventoPnl.add(idEventoRELbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        idEventoREField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        idEventoREField.setPreferredSize(new java.awt.Dimension(91, 22));
        idEventoREField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEventoREFieldActionPerformed(evt);
            }
        });
        recaudacionEventoPnl.add(idEventoREField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        aceptarBtnREPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aceptarBtnREPnl.setText("Aceptar");
        aceptarBtnREPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        aceptarBtnREPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnREPnlActionPerformed(evt);
            }
        });
        recaudacionEventoPnl.add(aceptarBtnREPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        backBtnREPnl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backBtnREPnl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recurso/orangeGoBackArrow.png"))); // NOI18N
        backBtnREPnl.setText("Atras");
        backBtnREPnl.setPreferredSize(new java.awt.Dimension(128, 30));
        backBtnREPnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnREPnlActionPerformed(evt);
            }
        });
        recaudacionEventoPnl.add(backBtnREPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, -1));

        jLabelME.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelME.setText("El evento ha recaudado: ");
        recaudacionEventoPnl.add(jLabelME, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 380, 30));

        resultadoRELbl.setText("jLabel1");
        recaudacionEventoPnl.add(resultadoRELbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 100, 40));

        backgroundPnl.add(recaudacionEventoPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        crearEventoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        crearEventoBtn.setText("Crear un Evento");
        crearEventoBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        crearEventoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearEventoBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(crearEventoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        listarEventosBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listarEventosBtn.setText("Listado de Eventos");
        listarEventosBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        listarEventosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarEventosBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(listarEventosBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 165, -1, -1));

        modEventoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modEventoBtn.setText("Modificar un Evento");
        modEventoBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        modEventoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modEventoBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(modEventoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        eliminarEventoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eliminarEventoBtn.setText("Eliminar un Evento");
        eliminarEventoBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        eliminarEventoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarEventoBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(eliminarEventoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 295, -1, -1));

        listarAsistentesBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listarAsistentesBtn.setText("Listado de Asistentes a un Evento");
        listarAsistentesBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        listarAsistentesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarAsistentesBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(listarAsistentesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, -1, -1));

        modAsistenteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modAsistenteBtn.setText("Modificar Datos de un Asistente");
        modAsistenteBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        modAsistenteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modAsistenteBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(modAsistenteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 425, -1, -1));

        recaudEventoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        recaudEventoBtn.setText("Ver Recaudacion de un Evento");
        recaudEventoBtn.setPreferredSize(new java.awt.Dimension(256, 60));
        recaudEventoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recaudEventoBtnActionPerformed(evt);
            }
        });
        backgroundPnl.add(recaudEventoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, -1, -1));

        add(backgroundPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    
    //================= BOTONES ================================================
    
    
    
    private void crearEventoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearEventoBtnActionPerformed
        idEventoFieldCE.setText("");
        nombreFieldCE.setText("");
        fechaFieldCE.setText("");
        descripFieldCE.setText("");
        listaGrupoObjetivo.clearSelection();
        valorEntradaFieldCE.setText("");
        idRecintoFieldCE.setText("");
        
        crearEventoPnl.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_crearEventoBtnActionPerformed

    private void listarEventosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarEventosBtnActionPerformed
        listarEventos.setVisible(true);
        mostrarEventosScrPnlLE.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
        
        menu.mostrarEventos(getMostrarEventosTblLEModel());
    }//GEN-LAST:event_listarEventosBtnActionPerformed

    
    
    private void modEventoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modEventoBtnActionPerformed
        idEventoFieldME.setText("");
        nombreFieldME.setText("");
        fechaFieldME.setText("");
        descripFieldME.setText("");
        listaGrupoObjME.clearSelection();
        valorEntradaFieldME.setText("");
        idRecintoFieldME.setText("");
        
        modificarEventoPnl.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_modEventoBtnActionPerformed

    private void eliminarEventoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarEventoBtnActionPerformed
        // TODO add your handling code here:
        idEventoFieldEE.setText("");
        eliminarEvento.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_eliminarEventoBtnActionPerformed
    
    private void listarAsistentesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarAsistentesBtnActionPerformed
        
        listarAsistentesEventoPnl.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        idEventoFieldEE.setText("");
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_listarAsistentesBtnActionPerformed

    private void modAsistenteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modAsistenteBtnActionPerformed
        // TODO add your handling code here:
        idEventoMAField.setText("");
        idAsistenteMAField.setText("");
        nombreMAField.setText("");
        edadMAField.setText("");
        emailMAField.setText("");
        modificarAsistentePnl.setVisible(true);
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        nombreMAField.setEnabled(false);
        edadMAField.setEnabled(false);
        emailMAField.setEnabled(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_modAsistenteBtnActionPerformed

    private void recaudEventoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recaudEventoBtnActionPerformed
        // TODO add your handling code here:
        recaudacionEventoPnl.setVisible(true);
        idEventoREField.setText("");
        resultadoRELbl.setText("$0 CLP");
        crearEventoBtn.setVisible(false);
        listarEventosBtn.setVisible(false);
        modEventoBtn.setVisible(false);
        eliminarEventoBtn.setVisible(false);
        listarAsistentesBtn.setVisible(false);
        modAsistenteBtn.setVisible(false);
        recaudEventoBtn.setVisible(false);
        currentVP.ventaEntradasBtn.setVisible(false);
        currentVP.eventosBtn.setVisible(false);
        currentVP.recintosBtn.setVisible(false);
        currentVP.exitBtn.setVisible(false);
        currentVP.homeBtn.setVisible(false);
        currentVP.exportarDatosBtn.setVisible(false);
    }//GEN-LAST:event_recaudEventoBtnActionPerformed

    //==========================================================================
    
    private void idEventoFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoFieldCEActionPerformed

    private void nombreFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreFieldCEActionPerformed

    private void fechaFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaFieldCEActionPerformed

    private void descripFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripFieldCEActionPerformed

    private void valorEntradaFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorEntradaFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorEntradaFieldCEActionPerformed

    private void aceptarBtnCEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnCEPnlActionPerformed
        String idEvento, idRecinto, nombreEvento, fechaEvento, descripcion, grupoObjetivo, valorEntrada;
        int status;
        Evento evento;
        // obtencion de Fields
        idEvento = idEventoFieldCE.getText();
        nombreEvento = nombreFieldCE.getText();
        fechaEvento = fechaFieldCE.getText();
        descripcion = descripFieldCE.getText();
        grupoObjetivo = listaGrupoObjetivo.getSelectedValue();
        if(valorEntradaFieldCE.getText().equals("")){
            valorEntrada = "0";
        }else{
            valorEntrada = valorEntradaFieldCE.getText();
        }
        idRecinto = idRecintoFieldCE.getText();
        
        if (idEvento.equals("") || 
            nombreEvento.equals("") || 
            fechaEvento.equals("") || 
            descripcion.equals("") || 
            grupoObjetivo == null || 
            valorEntradaFieldCE.getText().equals("") || 
            listaGrupoObjetivo.getSelectedValue().equals("")){
            JOptionPane.showMessageDialog(null, "Algunos campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
        }else{
            if(idRecinto.equals("")){
                idRecinto = null;
            }
            try{
                status = menu.agregarEvento(idEvento, nombreEvento, fechaEvento, descripcion, grupoObjetivo, idRecinto, valorEntrada); 
                if (status == 1){
                    JOptionPane.showMessageDialog(null, "Se ha creado el evento correctamente.", "System Says",JOptionPane.INFORMATION_MESSAGE);
                    crearEventoPnl.setVisible(false);
                    crearEventoBtn.setVisible(true);
                    listarEventosBtn.setVisible(true);
                    modEventoBtn.setVisible(true);
                    eliminarEventoBtn.setVisible(true);
                    listarAsistentesBtn.setVisible(true);
                    modAsistenteBtn.setVisible(true);
                    recaudEventoBtn.setVisible(true);
                    currentVP.ventaEntradasBtn.setVisible(true);
                    currentVP.eventosBtn.setVisible(true);
                    currentVP.recintosBtn.setVisible(true);
                    currentVP.exitBtn.setVisible(true);
                    currentVP.homeBtn.setVisible(true);
                    currentVP.exportarDatosBtn.setVisible(true);
                }else if(status == 0){
                    JOptionPane.showMessageDialog(null, "El evento ya existe.", "Field Error", JOptionPane.ERROR_MESSAGE);
                    crearEventoPnl.setVisible(false);
                    crearEventoBtn.setVisible(true);
                    listarEventosBtn.setVisible(true);
                    modEventoBtn.setVisible(true);
                    eliminarEventoBtn.setVisible(true);
                    listarAsistentesBtn.setVisible(true);
                    modAsistenteBtn.setVisible(true);
                    recaudEventoBtn.setVisible(true);
                    currentVP.ventaEntradasBtn.setVisible(true);
                    currentVP.eventosBtn.setVisible(true);
                    currentVP.recintosBtn.setVisible(true);
                    currentVP.exitBtn.setVisible(true);
                    currentVP.homeBtn.setVisible(true);
                    currentVP.exportarDatosBtn.setVisible(true);
                    return;
                }else if(status == -1){
                    JOptionPane.showMessageDialog(null, "WARNING: No existe ningun recinto para poder registrar el evento. Para continuar creando el evento, debe crear un recinto.", "Recinto Availability", JOptionPane.WARNING_MESSAGE);
                    crearRecintoPnlCE.setVisible(true);
                    // agregarRecinto
                    crearEventoPnl.setVisible(false);
                    aceptarBtnCEPnl.setVisible(false);
                    return;//eliminar este return y quitar las weas de botones de abajo
                }else if(status == -2){
                    JOptionPane.showMessageDialog(null, "El ID del recinto ingresado no se encuentra asociado a un recinto en el sistema.", "ID Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }else if(status == -3){
                    JOptionPane.showMessageDialog(null, "ERROR: El Evento no pudo ser agregado correctamente en el sistema. "
                    + "Los cupos del recinto asociado a la ID entregada, no son suficientes para los eventos asociados a este recinto, o se debe a un error desconocido.", "ModificarRecinto Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            catch(BadIdRecintoException e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "ID Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            catch(IllegalArgumentException e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "Valor Entrada Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
                
    }//GEN-LAST:event_aceptarBtnCEPnlActionPerformed

    private void idRecintoFieldCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idRecintoFieldCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idRecintoFieldCEActionPerformed

    private void backBtnCEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnCEPnlActionPerformed
        // TODO add your handling code here:
        crearEventoPnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_backBtnCEPnlActionPerformed

    private void backBtnLEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnLEPnlActionPerformed
        // TODO add your handling code here:
        listarEventos.setVisible(false);
        mostrarEventosScrPnlLE.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_backBtnLEPnlActionPerformed

    private void backBtnEEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnEEPnlActionPerformed
        // TODO add your handling code here:
        idEventoFieldEE.setText("");
        eliminarEvento.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_backBtnEEPnlActionPerformed

    private void idEventoFieldEEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoFieldEEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoFieldEEActionPerformed

    private void eliminarBtnEEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnEEPnlActionPerformed
        // TODO add your handling code here:
        String idEvento;
        idEvento = idEventoFieldEE.getText();
        if (idEvento.equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado ninguna id", "Field Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else{
            if (menu.obtenerEvento(idEvento) != null){
                boolean status = menu.eliminarEvento(idEvento);
        
                if (status){
                    JOptionPane.showMessageDialog(null, "El evento se ha eliminado el evento correctamente.", "System Says",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Error al eliminar el evento.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No existe ningun evento asociado al ID ingresado", "Not Found", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        eliminarEvento.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_eliminarBtnEEPnlActionPerformed

    private void idEventoFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoFieldMEActionPerformed

    private void nombreFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreFieldMEActionPerformed

    private void fechaFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaFieldMEActionPerformed

    private void descripFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripFieldMEActionPerformed

    private void valorEntradaFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorEntradaFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorEntradaFieldMEActionPerformed

    private void idRecintoFieldMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idRecintoFieldMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idRecintoFieldMEActionPerformed

    private void aceptarBtnMEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnMEPnlActionPerformed
        // TODO add your handling code here:
        
        
        //obtener Fields
        String idEvento, nombre, fecha, descripcion, grupoObjetivo, idRecinto,  valorEntrada;
        
        if (valorEntradaFieldME.getText().equals("")){
            valorEntrada = "0";
        }else{
            valorEntrada = valorEntradaFieldME.getText();
        }
        idRecinto = idRecintoFieldME.getText();
        if (idRecinto.equals("")){
            idRecinto = null;
        }
        
        if (idEventoFieldME.getText().equals("") || nombreFieldME.getText().equals("") || fechaFieldME.getText().equals("") || descripFieldME.getText().equals("") ||
            valorEntradaFieldME.getText().equals("") || listaGrupoObjME.getSelectedValue() == null){
            JOptionPane.showMessageDialog(null, "Los campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            if (menu.obtenerEvento(idEventoFieldME.getText()) != null ){
                idEvento = idEventoFieldME.getText();
                nombre = nombreFieldME.getText();
                fecha = fechaFieldME.getText();
                descripcion = descripFieldME.getText();
                grupoObjetivo = listaGrupoObjME.getSelectedValue();
                try{
                    int status = menu.modificarEvento(idEvento, nombre, fecha, descripcion, grupoObjetivo, idRecinto, valorEntrada);
                    if (status == 1){
                        JOptionPane.showMessageDialog(null, "Se ha modificado el evento correctamente.", "System Says",JOptionPane.INFORMATION_MESSAGE);
                        modificarEventoPnl.setVisible(false);
                        crearEventoBtn.setVisible(true);
                        listarEventosBtn.setVisible(true);
                        modEventoBtn.setVisible(true);
                        eliminarEventoBtn.setVisible(true);
                        listarAsistentesBtn.setVisible(true);
                        modAsistenteBtn.setVisible(true);
                        recaudEventoBtn.setVisible(true);
                        currentVP.ventaEntradasBtn.setVisible(true);
                        currentVP.eventosBtn.setVisible(true);
                        currentVP.recintosBtn.setVisible(true);
                        currentVP.exitBtn.setVisible(true);
                        currentVP.homeBtn.setVisible(true);
                        currentVP.exportarDatosBtn.setVisible(true);
                    }
                    else if (status == 0){
                        JOptionPane.showMessageDialog(null, "ERROR: El Evento no pudo ser modificado correctamente en el sistema. "
                        + "Los cupos del recinto asociado a la ID entregada, no son suficientes para los eventos asociados a este recinto, o se debe a un error desconocido.", "ModificarRecinto Error",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    else if (status == -1){
                        JOptionPane.showMessageDialog(null, "WARNING: No existe ningun recinto para poder registrar el evento. Para continuar creando el evento, debe crear un recinto.", "Recinto Availability", JOptionPane.WARNING_MESSAGE);
                        crearRecintoPnlME.setVisible(true);
                        modificarEventoPnl.setVisible(false);
                        return;
                    }
                    else if (status == -2){
                        JOptionPane.showMessageDialog(null, "El ID del recinto ingresado no se encuentra asociado a un recinto en el sistema.", "ID Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(IllegalArgumentException e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Valor Entrada Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "El ID del Evento no es valido", "ID Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_aceptarBtnMEPnlActionPerformed

    private void backBtnMEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnMEPnlActionPerformed
        // TODO add your handling code here:
        modificarEventoPnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_backBtnMEPnlActionPerformed

    private void idEventoMAFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoMAFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoMAFieldActionPerformed

    private void idAsistenteMAFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idAsistenteMAFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idAsistenteMAFieldActionPerformed

    private void nombreMAFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreMAFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreMAFieldActionPerformed

    private void emailMAFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailMAFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailMAFieldActionPerformed

    private void edadMAFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edadMAFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edadMAFieldActionPerformed

    private void validarBtnMAPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarBtnMAPnlActionPerformed
        // TODO add your handling code here:
        String idEvento, idAsistente, nombreAsis, email;
        int edad;
        idEvento = idEventoMAField.getText();
        idAsistente = idAsistenteMAField.getText();

        if (idEvento.equals("") || idAsistente.equals("")){
            //lanzar cuadro de error
            JOptionPane.showMessageDialog(null, "Algunos campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
        }else{
            
            Evento ev = menu.obtenerEvento(idEvento);
            
            
            if(ev != null){
                Asistente asis = ev.obtenerAsistente(idAsistente);
                if ( asis != null){
                // habilitar Fields
                nombreMAField.setEnabled(true);
                edadMAField.setEnabled(true);
                emailMAField.setEnabled(true);

                }else{
                    // deshabilitar Fields
                    JOptionPane.showMessageDialog(null, "Error, no se encontró el Asistente", "Field Error", JOptionPane.ERROR_MESSAGE);
                    nombreMAField.setEnabled(false);
                    edadMAField.setEnabled(false);
                    emailMAField.setEnabled(false);
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "Error, no se encontró el Evento", "Field Error", JOptionPane.ERROR_MESSAGE);
                nombreMAField.setEnabled(false);
                edadMAField.setEnabled(false);
                emailMAField.setEnabled(false);
            }
            
            
            
        }
        
    }//GEN-LAST:event_validarBtnMAPnlActionPerformed

    private void backBtnMAPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnMAPnlActionPerformed
        // TODO add your handling code here:
        modificarAsistentePnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_backBtnMAPnlActionPerformed

    private void aceptarMABtnPnl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarMABtnPnl1ActionPerformed
        String idEvento, idAsistente, nombreAsis, email, edad;
        idEvento = idEventoMAField.getText();
        idAsistente = idAsistenteMAField.getText();
        // continuar con la ejecución
            // validar si existe el evento y además el asistente.
            Evento ev = menu.obtenerEvento(idEvento);
            if (ev != null){
                Asistente asis = ev.obtenerAsistente(idAsistente);
                if ( asis != null){
                    //procedo a modificar
                    nombreAsis = nombreMAField.getText();
                    email = emailMAField.getText();
                    if (nombreAsis.equals("") || edadMAField.getText().equals("") || email.equals("")){
                        JOptionPane.showMessageDialog(null, "Los campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }else{
                        edad = edadMAField.getText();
                        try{
                            ev.modificarAsistente(idAsistente, nombreAsis, edad, email);
                        }
                        catch(BadRangeEdadException e){
                            JOptionPane.showMessageDialog(null, e.getMessage(), "ID Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }catch(IllegalArgumentException e){
                            JOptionPane.showMessageDialog(null, e.getMessage(), "Edad Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        JOptionPane.showMessageDialog(null, "Se ha modificado el asistente correctamente.", "System Says",JOptionPane.INFORMATION_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "ID del Asistente invalido.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }else{
                JOptionPane.showMessageDialog(null, "ID del Eventoinvalido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        modificarAsistentePnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
    }//GEN-LAST:event_aceptarMABtnPnl1ActionPerformed

    private void idEventoFieldLAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoFieldLAEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoFieldLAEActionPerformed

    private void validarIdEventoLAEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarIdEventoLAEPnlActionPerformed
        // TODO add your handling code here:
        String idEvento = idEventoFieldLAE.getText();
        if (!"".equals(idEvento)){
            Evento evento = menu.obtenerEvento(idEvento);
            if (evento!= null){
                evento.mostrarAsistentes(getMostrarAsistentesTblLAEModel());
            }
            else{
                getMostrarAsistentesTblLAEModel().setRowCount(0);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "El campo de ID Evento se encuentra vacio", "Field Error", JOptionPane.ERROR_MESSAGE);
            getMostrarAsistentesTblLAEModel().setRowCount(0);
            return;
        }
    }//GEN-LAST:event_validarIdEventoLAEPnlActionPerformed
 
    private void backBtnLAEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnLAEPnlActionPerformed
        // TODO add your handling code here:
        listarAsistentesEventoPnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true); 
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
        getMostrarAsistentesTblLAEModel().setRowCount(0);
        clearFieldsListarAsistentesEvento();
    }//GEN-LAST:event_backBtnLAEPnlActionPerformed

    private void idEventoREFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEventoREFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEventoREFieldActionPerformed

    private void aceptarBtnREPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnREPnlActionPerformed
        int total;
        String idEvento = idEventoREField.getText();
        if (idEvento.equals("")){
            JOptionPane.showMessageDialog(null, "El campo de ID Evento se encuentra vacio", "Field Error", JOptionPane.ERROR_MESSAGE);
        }else{
            Evento ev = menu.obtenerEvento(idEvento);
        
            if (ev != null){
                ev.calcularMontoTotal();
                total = ev.getMontoTotal();

                resultadoRELbl.setText("$"+String.valueOf(total)+" CLP");
            }else{
                JOptionPane.showMessageDialog(null, "No existe un evento asociado el ID ingresado.", "Not Found", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_aceptarBtnREPnlActionPerformed

    private void backBtnREPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnREPnlActionPerformed
        // TODO add your handling code here:
        recaudacionEventoPnl.setVisible(false);
        crearEventoBtn.setVisible(true);
        listarEventosBtn.setVisible(true);
        modEventoBtn.setVisible(true);
        eliminarEventoBtn.setVisible(true);
        listarAsistentesBtn.setVisible(true);
        modAsistenteBtn.setVisible(true);
        recaudEventoBtn.setVisible(true);
        currentVP.ventaEntradasBtn.setVisible(true);
        currentVP.eventosBtn.setVisible(true);
        currentVP.recintosBtn.setVisible(true);
        currentVP.exitBtn.setVisible(true);
        currentVP.homeBtn.setVisible(true);
        currentVP.exportarDatosBtn.setVisible(true);
        idEventoREField.setText("");
        resultadoRELbl.setText("$0 CLP");
    }//GEN-LAST:event_backBtnREPnlActionPerformed

    private void aceptarBtnCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnCRActionPerformed
        if (!"".equals(idRecintoFieldCR.getText()) &&
            !"".equals(nombreRecintoFieldCR.getText()) &&
            !"".equals(ubicacionFieldCR.getText()) &&
            !"".equals(cuposFieldCR.getText())){
            if (menu.obtenerRecinto(idRecintoFieldCR.getText()) == null){
                try{
                    menu.agregarRecinto(idEventoFieldCE.getText(), idRecintoFieldCR.getText(),nombreRecintoFieldCR.getText(),ubicacionFieldCR.getText(),cuposFieldCR.getText());
                    menu.mostrarRecintos();//consola

                    crearRecintoPnlCE.setVisible(false);
                    crearEventoBtn.setVisible(true);
                    listarEventosBtn.setVisible(true);
                    modEventoBtn.setVisible(true);
                    eliminarEventoBtn.setVisible(true);
                    listarAsistentesBtn.setVisible(true);
                    modAsistenteBtn.setVisible(true);
                    recaudEventoBtn.setVisible(true);
                    currentVP.ventaEntradasBtn.setVisible(true);
                    currentVP.eventosBtn.setVisible(true);
                    currentVP.recintosBtn.setVisible(true);
                    currentVP.exitBtn.setVisible(true);
                    currentVP.homeBtn.setVisible(true);
                    clearFieldsCrearRecinto();
                    JOptionPane.showMessageDialog(null, "El recinto fue creado y agregado correctamente al sistema", "System Says",JOptionPane.INFORMATION_MESSAGE);
                }
                catch(BadIdRecintoException e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "ID Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }catch(IllegalArgumentException e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Cupos Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else{
                crearRecintoPnlCE.setVisible(false);
                crearEventoBtn.setVisible(true);
                listarEventosBtn.setVisible(true);
                modEventoBtn.setVisible(true);
                eliminarEventoBtn.setVisible(true);
                listarAsistentesBtn.setVisible(true);
                modAsistenteBtn.setVisible(true);
                recaudEventoBtn.setVisible(true);
                currentVP.ventaEntradasBtn.setVisible(true);
                currentVP.eventosBtn.setVisible(true);
                currentVP.recintosBtn.setVisible(true);
                currentVP.exitBtn.setVisible(true);
                currentVP.homeBtn.setVisible(true);
                clearFieldsCrearRecinto();
                JOptionPane.showMessageDialog(null, "El recinto ingresado ya se encuentra asociado a una ID en el sistema", "Duplicate ID", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Los campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_aceptarBtnCRActionPerformed

    private void aceptarBtnCR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnCR1ActionPerformed
        if (!"".equals(idRecintoFieldCR1.getText()) &&
            !"".equals(nombreRecintoFieldCR1.getText()) &&
            !"".equals(ubicacionFieldCR1.getText()) &&
            !"".equals(cuposFieldCR1.getText())){
            if (menu.obtenerRecinto(idRecintoFieldCR1.getText()) == null){
                try{
                    menu.agregarRecinto(idEventoFieldME.getText(), idRecintoFieldCR1.getText(),nombreRecintoFieldCR1.getText(),ubicacionFieldCR1.getText(),cuposFieldCR1.getText());
                    menu.mostrarRecintos();//consola

                    crearRecintoPnlME.setVisible(false);
                    crearEventoBtn.setVisible(true);
                    listarEventosBtn.setVisible(true);
                    modEventoBtn.setVisible(true);
                    eliminarEventoBtn.setVisible(true);
                    listarAsistentesBtn.setVisible(true);
                    modAsistenteBtn.setVisible(true);
                    recaudEventoBtn.setVisible(true);
                    currentVP.ventaEntradasBtn.setVisible(true);
                    currentVP.eventosBtn.setVisible(true);
                    currentVP.recintosBtn.setVisible(true);
                    currentVP.exitBtn.setVisible(true);
                    currentVP.homeBtn.setVisible(true);
                    clearFieldsCrearRecinto();
                    JOptionPane.showMessageDialog(null, "El recinto fue creado y agregado correctamente al sistema", "System Says",JOptionPane.INFORMATION_MESSAGE);
                }
                catch(BadIdRecintoException e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "ID Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }catch(IllegalArgumentException e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Cupos Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else{
                crearRecintoPnlCE.setVisible(false);
                crearEventoBtn.setVisible(true);
                listarEventosBtn.setVisible(true);
                modEventoBtn.setVisible(true);
                eliminarEventoBtn.setVisible(true);
                listarAsistentesBtn.setVisible(true);
                modAsistenteBtn.setVisible(true);
                recaudEventoBtn.setVisible(true);
                currentVP.ventaEntradasBtn.setVisible(true);
                currentVP.eventosBtn.setVisible(true);
                currentVP.recintosBtn.setVisible(true);
                currentVP.exitBtn.setVisible(true);
                currentVP.homeBtn.setVisible(true);
                clearFieldsCrearRecinto();
                JOptionPane.showMessageDialog(null, "El recinto ingresado ya se encuentra asociado a una ID en el sistema", "Duplicate ID", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Los campos se encuentran vacios", "Field Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_aceptarBtnCR1ActionPerformed

    private void validarIdAsistenteLAEPnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarIdAsistenteLAEPnlActionPerformed
        String idEvento = idEventoFieldLAE.getText();
        if (!"".equals(idEvento)){
            if (!"".equals(idAsistenteFieldLAE.getText())){
                Evento evento = menu.obtenerEvento(idEvento);
                if (evento!= null){
                    evento.mostrarAsistentes(getMostrarAsistentesTblLAEModel(), idAsistenteFieldLAE.getText());
                }
                else{
                    getMostrarAsistentesTblLAEModel().setRowCount(0);
                }
            }
            else{
                getMostrarAsistentesTblLAEModel().setRowCount(0);
                JOptionPane.showMessageDialog(null, "El campo de ID Asistente se encuentra vacio", "Field Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "El campo de ID Evento se encuentra vacio", "Field Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_validarIdAsistenteLAEPnlActionPerformed
    
    public void clearFieldsCrearRecinto() {
        idRecintoFieldCR.setText("");
        nombreRecintoFieldCR.setText("");
        ubicacionFieldCR.setText("");
        cuposFieldCR.setText("");
    }
    
    public void clearFieldsListarAsistentesEvento(){
        idAsistenteFieldLAE.setText("");
        idEventoFieldLAE.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HeaderEELbl;
    private javax.swing.JLabel HeaderLblLE;
    private javax.swing.JButton aceptarBtnCEPnl;
    private javax.swing.JButton aceptarBtnCR;
    private javax.swing.JButton aceptarBtnCR1;
    private javax.swing.JButton aceptarBtnMEPnl;
    private javax.swing.JButton aceptarBtnREPnl;
    private javax.swing.JButton aceptarMABtnPnl1;
    private javax.swing.JButton backBtnCEPnl;
    private javax.swing.JButton backBtnEEPnl;
    private javax.swing.JButton backBtnLAEPnl;
    private javax.swing.JButton backBtnLEPnl;
    private javax.swing.JButton backBtnMAPnl;
    private javax.swing.JButton backBtnMEPnl;
    private javax.swing.JButton backBtnREPnl;
    private javax.swing.JPanel backgroundPnl;
    private javax.swing.JButton crearEventoBtn;
    private javax.swing.JPanel crearEventoPnl;
    private javax.swing.JPanel crearRecintoPnlCE;
    private javax.swing.JPanel crearRecintoPnlME;
    private javax.swing.JTextField cuposFieldCR;
    private javax.swing.JTextField cuposFieldCR1;
    private javax.swing.JLabel cuposLblCR;
    private javax.swing.JLabel cuposLblCR1;
    private javax.swing.JTextField descripFieldCE;
    private javax.swing.JTextField descripFieldME;
    private javax.swing.JLabel descripLblCE;
    private javax.swing.JLabel descripLblME;
    private javax.swing.JLabel descripMALbl;
    private javax.swing.JTextField edadMAField;
    private javax.swing.JButton eliminarBtnEEPnl;
    private javax.swing.JPanel eliminarEvento;
    private javax.swing.JButton eliminarEventoBtn;
    private javax.swing.JTextField emailMAField;
    private javax.swing.JTextField fechaFieldCE;
    private javax.swing.JTextField fechaFieldME;
    private javax.swing.JLabel fechaLblCE;
    private javax.swing.JLabel fechaLblME;
    private javax.swing.JLabel fechaMALbl;
    private javax.swing.JLabel grupoLblCE;
    private javax.swing.JLabel grupoLblME;
    private javax.swing.JScrollPane grupoMEScrollPnl;
    private javax.swing.JScrollPane grupoScrollPnlCE;
    private javax.swing.JLabel headerLblCE;
    private javax.swing.JLabel headerLblCR;
    private javax.swing.JLabel headerLblCR1;
    private javax.swing.JLabel headerLblLAE;
    private javax.swing.JLabel headerLblME;
    private javax.swing.JLabel headerLblPnl;
    private javax.swing.JLabel headerMALbl;
    private javax.swing.JLabel headerRELbl;
    private javax.swing.JTextField idAsistenteFieldLAE;
    private javax.swing.JLabel idAsistenteLblLAE;
    private javax.swing.JTextField idAsistenteMAField;
    private javax.swing.JLabel idEventoEELbl;
    private javax.swing.JTextField idEventoFieldCE;
    private javax.swing.JTextField idEventoFieldEE;
    private javax.swing.JTextField idEventoFieldLAE;
    private javax.swing.JTextField idEventoFieldME;
    private javax.swing.JLabel idEventoLblCE;
    private javax.swing.JLabel idEventoLblLAE;
    private javax.swing.JLabel idEventoLblME;
    private javax.swing.JTextField idEventoMAField;
    private javax.swing.JLabel idEventoMALbl;
    private javax.swing.JTextField idEventoREField;
    private javax.swing.JLabel idEventoRELbl;
    private javax.swing.JTextField idRecintoFieldCE;
    private javax.swing.JTextField idRecintoFieldCR;
    private javax.swing.JTextField idRecintoFieldCR1;
    private javax.swing.JTextField idRecintoFieldME;
    private javax.swing.JLabel idRecintoLblCE;
    private javax.swing.JLabel idRecintoLblCR;
    private javax.swing.JLabel idRecintoLblCR1;
    private javax.swing.JLabel idRecintoLblME;
    private javax.swing.JLabel jLabelMA;
    private javax.swing.JLabel jLabelME;
    private javax.swing.JList<String> listaGrupoObjME;
    private javax.swing.JList<String> listaGrupoObjetivo;
    private javax.swing.JButton listarAsistentesBtn;
    private javax.swing.JPanel listarAsistentesEventoPnl;
    private javax.swing.JPanel listarEventos;
    private javax.swing.JButton listarEventosBtn;
    private javax.swing.JButton modAsistenteBtn;
    private javax.swing.JButton modEventoBtn;
    private javax.swing.JPanel modificarAsistentePnl;
    private javax.swing.JPanel modificarEventoPnl;
    private javax.swing.JScrollPane mostrarAsistentesScrPnlLAE;
    private javax.swing.JTable mostrarAsistentesTblLAE;
    private javax.swing.JScrollPane mostrarEventosScrPnlLE;
    private javax.swing.JTable mostrarEventosTblLE;
    private javax.swing.JTextField nombreFieldCE;
    private javax.swing.JTextField nombreFieldME;
    private javax.swing.JLabel nombreLblCE;
    private javax.swing.JLabel nombreLblME;
    private javax.swing.JTextField nombreMAField;
    private javax.swing.JLabel nombreMALbl;
    private javax.swing.JTextField nombreRecintoFieldCR;
    private javax.swing.JTextField nombreRecintoFieldCR1;
    private javax.swing.JLabel nombreRecintoLblCR;
    private javax.swing.JLabel nombreRecintoLblCR1;
    private javax.swing.JButton recaudEventoBtn;
    private javax.swing.JPanel recaudacionEventoPnl;
    private javax.swing.JLabel resultadoRELbl;
    private javax.swing.JTextField ubicacionFieldCR;
    private javax.swing.JTextField ubicacionFieldCR1;
    private javax.swing.JLabel ubicacionLblCR;
    private javax.swing.JLabel ubicacionLblCR1;
    private javax.swing.JButton validarBtnMAPnl;
    private javax.swing.JButton validarIdAsistenteLAEPnl;
    private javax.swing.JButton validarIdEventoLAEPnl;
    private javax.swing.JTextField valorEntradaFieldCE;
    private javax.swing.JTextField valorEntradaFieldME;
    private javax.swing.JLabel valorEntradaLblCE;
    private javax.swing.JLabel valorEntradaLblME;
    private javax.swing.JLabel valorEntradaMALbl;
    // End of variables declaration//GEN-END:variables
}
